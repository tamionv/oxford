MODULE Main 0 0
IMPORT Lib 0
ENDHDR

PROC MAIN 0 0 0
!   v := 31415926;
CONST 31415926
GLOBAL _v
STOREW
!   k := 0;
CONST 0
GLOBAL _k
STOREW
JUMP L2
LABEL L1

!     d[k] := (v mod 2) <> 0;
GLOBAL _v
LOADW
CONST 2
MOD
CONST 0
NEQ

GLOBAL _d

GLOBAL _k
LOADW

CONST 32
BOUND 0

OFFSET
STOREC
!     v := v div 2;
GLOBAL _v
LOADW
CONST 2
DIV
GLOBAL _v
STOREW
!     k := k+1
GLOBAL _k
LOADW
CONST 1
PLUS
GLOBAL _k
STOREW
LABEL L2
!   while v <> 0 do
GLOBAL _v
LOADW
CONST 0
JNEQ L1
JUMP L3
LABEL L3
!   w := 0;
CONST 0
GLOBAL _w
STOREW
JUMP L5
LABEL L4
!     k := k-1;
GLOBAL _k
LOADW
CONST 1
MINUS
GLOBAL _k
STOREW
!     w := 2*w;
CONST 2
GLOBAL _w
LOADW
TIMES
GLOBAL _w
STOREW
!     if d[k] then w := w+1 end
GLOBAL _d
GLOBAL _k
LOADW
CONST 32
BOUND 0
OFFSET
LOADC
CONST 0
JNEQ L7
JUMP L8
LABEL L7
GLOBAL _w
LOADW
CONST 1
PLUS
GLOBAL _w
STOREW
JUMP L9
LABEL L8
LABEL L9
LABEL L5
!   while k > 0 do
GLOBAL _k
LOADW
CONST 0
JGT L4
JUMP L6
LABEL L6
!   print w; newline
GLOBAL _w
LOADW
CONST 0
GLOBAL lib.print
PCALL 1
CONST 0
GLOBAL lib.newline
PCALL 0
RETURN
END

GLOVAR _n 4
GLOVAR _v 4
GLOVAR _w 4
GLOVAR _k 4
GLOVAR _d 32
