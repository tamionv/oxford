MODULE Main 0 0
IMPORT Lib 0
ENDHDR

PROC MAIN 0 0 0
!   i := 2;
CONST 2
GLOBAL _i
STOREW

!   a[0] := 1;
CONST 1
GLOBAL _a
CONST 0
OFFSET
STOREW
!   a[1] := 1;
CONST 1
GLOBAL _a
CONST 4
OFFSET
STOREW
JUMP L2
LABEL L1
!     a[i] := a[i-2] + a[i-1];
GLOBAL _a
GLOBAL _i
LOADW
CONST 2
MINUS
CONST 10
BOUND 0
CONST 4
TIMES
OFFSET
LOADW
GLOBAL _a
GLOBAL _i
LOADW
CONST 1
MINUS
CONST 10
BOUND 0
CONST 4
TIMES
OFFSET
LOADW
PLUS
GLOBAL _a
GLOBAL _i
LOADW
CONST 10
BOUND 0
CONST 4
TIMES
OFFSET
STOREW
!     i := i+1
GLOBAL _i
LOADW
CONST 1
PLUS
GLOBAL _i
STOREW
LABEL L2
!   while i < 10 do
GLOBAL _i
LOADW
CONST 10
JLT L1
JUMP L3
LABEL L3
!   i := 0;
CONST 0
GLOBAL _i
STOREW
JUMP L5
LABEL L4
!     print a[i]; newline;
GLOBAL _a
GLOBAL _i
LOADW
CONST 10
BOUND 0
CONST 4
TIMES
OFFSET
LOADW
CONST 0
GLOBAL lib.print
PCALL 1
CONST 0
GLOBAL lib.newline
PCALL 0
!     i := i+1;
GLOBAL _i
LOADW
CONST 1
PLUS
GLOBAL _i
STOREW
LABEL L5
!   while i < 10 do
GLOBAL _i
LOADW
CONST 10
JLT L4
JUMP L6
LABEL L6
RETURN
END

GLOVAR _a 40
GLOVAR _i 4
